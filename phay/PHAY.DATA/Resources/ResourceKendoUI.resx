<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Editor_Bold" xml:space="preserve">
    <value>Đậm</value>
  </data>
  <data name="Editor_CreateLink" xml:space="preserve">
    <value>Chèn liên kết</value>
  </data>
  <data name="Editor_FontName" xml:space="preserve">
    <value>Chọn font</value>
  </data>
  <data name="Editor_FontNameInherit" xml:space="preserve">
    <value>(kế thừa font)</value>
  </data>
  <data name="Editor_FontSize" xml:space="preserve">
    <value>Chọn kích thước chữ</value>
  </data>
  <data name="Editor_FontSizeInherit" xml:space="preserve">
    <value>(kế thừa kích thước)</value>
  </data>
  <data name="Editor_FormatBlock" xml:space="preserve">
    <value>Định dạng</value>
  </data>
  <data name="Editor_Indent" xml:space="preserve">
    <value>Thụt vào</value>
  </data>
  <data name="Editor_InsertHtml" xml:space="preserve">
    <value>Chèn HTML</value>
  </data>
  <data name="Editor_InsertImage" xml:space="preserve">
    <value>Chèn hình ảnh</value>
  </data>
  <data name="Editor_InsertOrderedList" xml:space="preserve">
    <value>Chèn danh sách thứ tự</value>
  </data>
  <data name="Editor_InsertUnorderedList" xml:space="preserve">
    <value>Chèn danh sách không thứ tự</value>
  </data>
  <data name="Editor_Italic" xml:space="preserve">
    <value>Nghiêng</value>
  </data>
  <data name="Editor_JustifyCenter" xml:space="preserve">
    <value>Canh giữa</value>
  </data>
  <data name="Editor_JustifyFull" xml:space="preserve">
    <value>Canh đều</value>
  </data>
  <data name="Editor_JustifyLeft" xml:space="preserve">
    <value>Canh trái</value>
  </data>
  <data name="Editor_JustifyRight" xml:space="preserve">
    <value>Canh phải</value>
  </data>
  <data name="Editor_Outdent" xml:space="preserve">
    <value>Thụt ra</value>
  </data>
  <data name="Editor_Strikethrough" xml:space="preserve">
    <value>Gạch ngang</value>
  </data>
  <data name="Editor_Styles" xml:space="preserve">
    <value>Kiểu</value>
  </data>
  <data name="Editor_Subscript" xml:space="preserve">
    <value>Subscript</value>
  </data>
  <data name="Editor_Superscript" xml:space="preserve">
    <value>Superscript</value>
  </data>
  <data name="Editor_Underline" xml:space="preserve">
    <value>Gạch chân</value>
  </data>
  <data name="Editor_Unlink" xml:space="preserve">
    <value>Xóa liên kết</value>
  </data>
  <data name="Filter_And" xml:space="preserve">
    <value>Và</value>
  </data>
  <data name="Filter_Clear" xml:space="preserve">
    <value>Xóa sạch</value>
  </data>
  <data name="Filter_DateIsEqualTo" xml:space="preserve">
    <value>Bằng với</value>
  </data>
  <data name="Filter_DateIsGreaterThan" xml:space="preserve">
    <value>Lớn hơn</value>
  </data>
  <data name="Filter_DateIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>Lớn hơn hoặc bằng</value>
  </data>
  <data name="Filter_DateIsLessThan" xml:space="preserve">
    <value>Nhỏ hơn</value>
  </data>
  <data name="Filter_DateIsLessThanOrEqualTo" xml:space="preserve">
    <value>Nhỏ hơn hoặc bằng</value>
  </data>
  <data name="Filter_DateIsNotEqualTo" xml:space="preserve">
    <value>Không bằng</value>
  </data>
  <data name="Filter_EnumIsEqualTo" xml:space="preserve">
    <value>Bằng</value>
  </data>
  <data name="Filter_EnumIsNotEqualTo" xml:space="preserve">
    <value>Không bằng</value>
  </data>
  <data name="Filter_Filter" xml:space="preserve">
    <value>Lọc</value>
  </data>
  <data name="Filter_Info" xml:space="preserve">
    <value>Hiển thị dữ liệu với điều kiện:</value>
  </data>
  <data name="Filter_IsFalse" xml:space="preserve">
    <value>sai</value>
  </data>
  <data name="Filter_IsTrue" xml:space="preserve">
    <value>đúng</value>
  </data>
  <data name="Filter_NumberIsEqualTo" xml:space="preserve">
    <value>Bằng</value>
  </data>
  <data name="Filter_NumberIsGreaterThan" xml:space="preserve">
    <value>Lớn hơn</value>
  </data>
  <data name="Filter_NumberIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>Lớn hơn hoặc bằng</value>
  </data>
  <data name="Filter_NumberIsLessThan" xml:space="preserve">
    <value>Nhỏ hơn</value>
  </data>
  <data name="Filter_NumberIsLessThanOrEqualTo" xml:space="preserve">
    <value>Nhỏ hơn hoặc bằng</value>
  </data>
  <data name="Filter_NumberIsNotEqualTo" xml:space="preserve">
    <value>Không bằng</value>
  </data>
  <data name="Filter_Or" xml:space="preserve">
    <value>Hoặc</value>
  </data>
  <data name="Filter_SelectValue" xml:space="preserve">
    <value>- Chọn giá trị -</value>
  </data>
  <data name="Filter_StringContains" xml:space="preserve">
    <value>Chứa</value>
  </data>
  <data name="Filter_StringDoesNotContain" xml:space="preserve">
    <value>Không chứa</value>
  </data>
  <data name="Filter_StringEndsWith" xml:space="preserve">
    <value>Kết thúc bằng</value>
  </data>
  <data name="Filter_StringIsEqualTo" xml:space="preserve">
    <value>Bằng</value>
  </data>
  <data name="Filter_StringIsNotEqualTo" xml:space="preserve">
    <value>Không bằng</value>
  </data>
  <data name="Filter_StringStartsWith" xml:space="preserve">
    <value>Bắt đầu bằng</value>
  </data>
  <data name="Grid_Cancel" xml:space="preserve">
    <value>Hủy</value>
  </data>
  <data name="Grid_CancelChanges" xml:space="preserve">
    <value>Hủy thay đổi</value>
  </data>
  <data name="Grid_Columns" xml:space="preserve">
    <value>Cột</value>
  </data>
  <data name="Grid_Confirmation" xml:space="preserve">
    <value>Xóa dòng dữ liệu được chọn?</value>
  </data>
  <data name="Grid_Create" xml:space="preserve">
    <value>Thêm mới</value>
  </data>
  <data name="Grid_Destroy" xml:space="preserve">
    <value>Xóa</value>
  </data>
  <data name="Grid_Edit" xml:space="preserve">
    <value>Chỉnh sửa</value>
  </data>
  <data name="Grid_SaveChanges" xml:space="preserve">
    <value>Lưu cập nhật</value>
  </data>
  <data name="Grid_Select" xml:space="preserve">
    <value>Chọn</value>
  </data>
  <data name="Grid_SortAscending" xml:space="preserve">
    <value>Sắp xếp tăng dần</value>
  </data>
  <data name="Grid_SortDescending" xml:space="preserve">
    <value>Sắp xếp giảm dần</value>
  </data>
  <data name="Grid_Update" xml:space="preserve">
    <value>Cập nhật</value>
  </data>
  <data name="Group_Empty" xml:space="preserve">
    <value>Kéo và thả một tiêu đề cột vào đây để nhóm dữ liệu</value>
  </data>
  <data name="Pager_Display" xml:space="preserve">
    <value>{0} - {1} của {2}</value>
  </data>
  <data name="Pager_Empty" xml:space="preserve">
    <value>Không có dữ liệu để hiển thị</value>
  </data>
  <data name="Pager_First" xml:space="preserve">
    <value>Trang đầu tiên</value>
  </data>
  <data name="Pager_ItemsPerPage" xml:space="preserve">
    <value>mẫu tin/trang</value>
  </data>
  <data name="Pager_Last" xml:space="preserve">
    <value>Trang cuối cùng</value>
  </data>
  <data name="Pager_Next" xml:space="preserve">
    <value>Trang tiếp theo</value>
  </data>
  <data name="Pager_Of" xml:space="preserve">
    <value>trên {0}</value>
  </data>
  <data name="Pager_Page" xml:space="preserve">
    <value>Trang</value>
  </data>
  <data name="Pager_Previous" xml:space="preserve">
    <value>Trang trước</value>
  </data>
  <data name="Pager_Refresh" xml:space="preserve">
    <value>Làm mới</value>
  </data>
  <data name="Upload_Cancel" xml:space="preserve">
    <value>Hủy</value>
  </data>
  <data name="Upload_DropFilesHere" xml:space="preserve">
    <value>kéo thả tệp vào đây để tải lên</value>
  </data>
  <data name="Upload_Remove" xml:space="preserve">
    <value>Xóa</value>
  </data>
  <data name="Upload_Retry" xml:space="preserve">
    <value>Thử lại</value>
  </data>
  <data name="Upload_Select" xml:space="preserve">
    <value>Chọn...</value>
  </data>
  <data name="Upload_StatusFailed" xml:space="preserve">
    <value>thất bại</value>
  </data>
  <data name="Upload_StatusUploaded" xml:space="preserve">
    <value>đã tải lên</value>
  </data>
  <data name="Upload_StatusUploading" xml:space="preserve">
    <value>đang tải lên</value>
  </data>
  <data name="Upload_UploadSelectedFiles" xml:space="preserve">
    <value>Tải tiệp lên</value>
  </data>
</root>