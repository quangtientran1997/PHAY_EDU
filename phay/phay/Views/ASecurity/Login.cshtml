@using System.Web.Mvc
@using System.Web.Mvc.Ajax
@using System.Web.Mvc.Html
@using PHAY.MOD.SYS.ViewModels
@inherits System.Web.Mvc.WebViewPage<LoginViewModel>
@{
    ViewBag.Title = "Đăng nhập";
    Layout = "~/Views/Shared/Admin/_LayoutLogin.cshtml";
}

<div class="loginColumns animated fadeInDown">
    <div class="row">

        <div class="col-md-6">
            <div class="col-lg-8 col-md-7 col-12 slide-left">
                <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img class="d-block w-100" src="~/Content/login/img/slide1.png" alt="">
                        </div>
                        <div class="carousel-item">
                            <img class="d-block w-100" src="~/Content/login/img/slide2.png" alt="">
                        </div>
                    </div>
                    <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>

        </div>
        <div class="col-md-6">
            <div class="ibox-content">
                <h2 class="font-bold">Đăng nhập hệ thống</h2>
                @using (Ajax.BeginForm("Login", "ASecurity", new { area = "" }, new AjaxOptions
                {
                    OnSuccess = "onAjaxSuccess",
                    OnFailure = "onAjaxFailure",
                    InsertionMode = InsertionMode.Replace,
                    LoadingElementId = "ajaxLoading"
                }, new { id = "form-login", @class = "form-login", @autocomplete = "new-password" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.rQuery)
                    <input asp-for="ReturnUrl" type="hidden" />
                    <div class="form-group">

                        <div class="input-group mb-2">

                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "Nhập tên đăng nhập", autocomplete = "new-password", required = "required" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-group mb-2">

                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Nhập mật khẩu", autocomplete = "new-password", required = "required" })
                        </div>
                    </div>
                    @*<div class="form-group">
                            <label style="padding-right:15px">@Html.CheckBoxFor(m => m.IsGiangVien, new { @checked = "checked" }) Là giảng viên</label>
                            <label>@Html.CheckBoxFor(m => m.IsCoSoGDNN, new { @checked = "checked" }) Cơ sở GDNN</label>
                        </div>*@

                    <br />
                    <button type="submit" class="btn btn-primary block full-width m-b">Đăng nhập</button>
                    <br /><br />
                    <br />
                    @Html.Partial("~/Views/Shared/Admin/Partials/_Massage-box.cshtml")
                }
            </div>
        </div>
    </div>
</div>

@*<div class="container">
        <div class="login-box">
            <div class="div_login">
                <div class="logo-login">
                    @{
                        <img src="~/Content/login2/img/logo.png">
                    }
                </div>
            </div>
            <div class="login-box-body">
                <div>
                    @using (Ajax.BeginForm("Login", "ASecurity", new { area = "" }, new AjaxOptions
                    {
                        OnSuccess = "onAjaxSuccess",
                        OnFailure = "onAjaxFailure",
                        InsertionMode = InsertionMode.Replace,
                        LoadingElementId = "ajaxLoading"
                    }, new { id = "form-login", @class = "form-login" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.rQuery)
                        <input asp-for="ReturnUrl" type="hidden" />
                        <div class="form-group">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <div class="input-group-text w154"><i class="fa fa-user"></i>&nbsp;Tên đăng nhập</div>
                                </div>
                                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "Nhập tên đăng nhập", autocomplete = "new-password", required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <div class="input-group-text w154"><i class="fa fa-unlock-alt"></i>&nbsp;Mật khẩu</div>
                                </div>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Nhập mật khẩu", autocomplete = "new-password", required = "required" })
                            </div>
                        </div>

                        <a id="btnLogin" name="btnLogin" href="javascript:void(0);" class="btn btn-primary btn-100">ĐĂNG NHẬP</a>
                        <br /><br />
                        <a href="/resetpass.html" style="font-size: 13px;color: #0055b1;">Quên mật khẩu?</a>
                        <br />
                        @Html.Partial("~/Views/Shared/Admin/Partials/_Massage-box.cshtml")
                    }
                </div>
            </div>
        </div>
    </div>*@

<script type="text/javascript">
    var _0x2850 = ['click', 'preventDefault', 'submit', 'length', '#msg-login-fail', '<div\x20class=\x22k-callout\x20k-callout-n\x22></div></div>', '#div-errors', 'append', 'toggleClass', 'hide', 'show', 'keypress', 'btnLogin', '/Common/GetPrivateKey', 'get', 'val', 'ajax', 'getElementById', 'e84ad660c4721ae0e84ad660c4721ae0', 'parse', 'Hex', 'enc', 'Utf8', 'CryptographyPMT-EMS', 'mode', 'Pkcs7', 'pad', 'value', 'ciphertext', 'PBKDF2', 'toString', 'Base64', 'ready', '#form-login', 'css', 'border', '1px\x20solid\x20#ccc', '#Password', 'css', '#UserName', '1px\x20solid\x20red', 'UserName', 'function', 'trigger', '#btnLogin']; (function (_0x10e5ab, _0x1325fb) { var _0xcd89cd = function (_0x3e77ff) { while (--_0x3e77ff) { _0x10e5ab['push'](_0x10e5ab['shift']()); } }; _0xcd89cd(++_0x1325fb); }(_0x2850, 0xde)); var _0x50b8 = function (_0x323a59, _0x32df89) { _0x323a59 = _0x323a59 - 0x0; var _0x55aa14 = _0x2850[_0x323a59]; return _0x55aa14; }; function triggerOnEnter(_0x115e37, _0x4f3899, _0x9a95b9) { if (_0x115e37['keyCode'] == 0xd) { if (typeof _0x9a95b9 != _0x50b8('0x0')) { $('#' + _0x4f3899)[_0x50b8('0x1')](_0x9a95b9); } else { _0x9a95b9(); } } } $(_0x50b8('0x2'))[_0x50b8('0x3')](function (_0x32630d) { _0x32630d[_0x50b8('0x4')](); $('#form-login')[_0x50b8('0x5')](); }); function onAjaxFailure(_0x4343b6) { showDefaultErrorMessage(); } function onAjaxSuccess(_0x53be0e) { var _0x2930fa = getErrors(_0x53be0e); if (_0x2930fa[_0x50b8('0x6')] > 0x0) { if ($(_0x50b8('0x7'))[_0x50b8('0x6')] == 0x0) { var _0x3a3db6 = '<div\x20class=\x22k-invalid-msg\x20field-validation-error\x20hide\x22\x20style=\x22display:\x20block;\x22\x20id=\x22msg-login-fail\x22\x20role=\x22alert\x22>\x20' + _0x2930fa + _0x50b8('0x8'); $(_0x50b8('0x9'))[_0x50b8('0xa')](_0x3a3db6); } $(_0x50b8('0x7'))[_0x50b8('0xb')](_0x50b8('0xc'), ![])[_0x50b8('0xd')](); $(_0x50b8('0x7'))['html'](_0x2930fa); } else { location['href'] = ''; } } $('#UserName\x20,\x20#Password')['on'](_0x50b8('0xe'), function (_0x544b45) { if (this['value'] != '') { triggerOnEnter(_0x544b45, _0x50b8('0xf'), 'click'); } }); var _0x6100 = ['', _0x50b8('0x10'), _0x50b8('0x11'), _0x50b8('0x12'), '#', _0x50b8('0x13'), _0x50b8('0x14'), _0x50b8('0x15'), _0x50b8('0x16'), _0x50b8('0x17'), _0x50b8('0x18'), _0x50b8('0x19'), _0x50b8('0x1a'), 'CBC', _0x50b8('0x1b'), _0x50b8('0x1c'), _0x50b8('0x1d'), 'encrypt', 'AES', _0x50b8('0x1e'), _0x50b8('0x1f')]; function GetPrivateKey(_0x1bd14c, _0x340599) { var _0x27f4ba = _0x6100[0x0]; $[_0x6100[0x5]]({ 'url': _0x6100[0x1], 'type': _0x6100[0x2], 'data': { 'salt': $(_0x6100[0x4] + _0x340599)[_0x6100[0x3]]() }, 'success': function (_0xe2d567) { _0x27f4ba = _0xe2d567; }, 'async': ![] }); return _0x27f4ba; } function PMTEncryptData(_0x4bd137, _0x58954) { var _0x4fec52 = $(_0x6100[0x4] + _0x58954)[_0x6100[0x3]](); var _0x32c2a1 = document[_0x6100[0x6]](_0x58954); var _0x167640 = $(_0x6100[0x4] + _0x4bd137)[_0x6100[0x3]](); try { var _0x14014c = CryptoJS[_0x6100[0xa]][_0x6100[0x9]][_0x6100[0x8]](_0x6100[0x7]); var _0x2c9ec6 = CryptoJS[_0x6100[0xa]][_0x6100[0xb]][_0x6100[0x8]](GetPrivateKey(_0x167640, _0x4bd137)); var _0x4d598c = CryptoJS[_0x6100[0xa]][_0x6100[0xb]][_0x6100[0x8]](_0x6100[0xc]); var _0x5638c7 = CryptoJS[_0x50b8('0x20')](_0x2c9ec6[_0x50b8('0x21')](CryptoJS[_0x6100[0xa]][_0x50b8('0x19')]), _0x4d598c, { 'keySize': 0x80 / 0x20, 'iterations': 0x3e8 }); var _0x8d121f = CryptoJS[_0x6100[0x12]][_0x6100[0x11]](_0x4fec52, _0x5638c7, { 'mode': CryptoJS[_0x6100[0xe]][_0x6100[0xd]], 'iv': _0x14014c, 'padding': CryptoJS[_0x6100[0x10]][_0x6100[0xf]] }); _0x32c2a1[_0x6100[0x13]] = _0x8d121f[_0x6100[0x14]][_0x50b8('0x21')](CryptoJS[_0x6100[0xa]][_0x50b8('0x22')]); } catch (_0x2ca10d) { return _0x6100[0x0]; }; } $(document)[_0x50b8('0x23')](function () { $(_0x50b8('0x24'))['submit'](function () { var _0x3707c1 = 0x0; $('#UserName')[_0x50b8('0x25')](_0x50b8('0x26'), _0x50b8('0x27')); $(_0x50b8('0x28'))[_0x50b8('0x29')]('border', _0x50b8('0x27')); if ($(_0x50b8('0x2a'))[_0x50b8('0x12')]() == '') { $(_0x50b8('0x2a'))['css'](_0x50b8('0x26'), '1px\x20solid\x20red'); _0x3707c1 = 0x1; } if ($('#Password')['val']() == '') { $('#Password')[_0x50b8('0x29')]('border', _0x50b8('0x2b')); _0x3707c1 = 0x1; } if (_0x3707c1 == 0x1) { return ![]; } PMTEncryptData(_0x50b8('0x2c'), 'Password'); }); });

    //if (typeof (Storage) !== "undefined") {
    //    var storageKey = 'tabs';
    //    localStorage.removeItem(storageKey);
    //    localStorage.toggledUL = "";
    //}

</script>
